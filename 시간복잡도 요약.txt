기본적으로 1억에 1초(C/C++ 기준) 
파이썬은 1초에 2천만번
N의 범위가 백만에 근사 -> 무조건 NlonN 아래의 알고리즘풀이 필요 암기

파이썬은 1초에 2000만번의 연산으로 이해하자.
N의 범위		가능한 빅오
500	백	O(N^3)    
2,000	천	O(N^2)
1000,000	백만	O(NlogN)
10,000,000천만	O(N)

int 4byte  -> 4KB 4000byte -> 4MB 4000,000byte 4백만 
보통 공간 메모리 128~512MB의 크기를 가진다. 즉, 일반적인 경우 데이터의 개수가 1000만 단위가 넘어 가지 않도록 알고리즘 설계를 해야한다.



append()		O(1)
sort()		O(NlogN)
reverse()		O(N)
insert()		O(N)
count()		O(N)
remove()		O(N)	// 집합에서는 O(1)
heapq의 푸쉬, 팝   O(NlogN)
bisect의 right,left	O(logN)
리스트의 append,pop O(1)
리스트의 앞쪽 append pop 	  O(N)
deque의  appendleft, popleft  O(1)


사전 or 집합에서 원소존재검사 O(1)

dfs/ bfs 시간복잡도
- 인접리스트 O(V + E)
- 인접 행렬 O(V ^2)
다익스트라 알고리즘
- 단순 O(V^2)
- 힙사용 O(ElogV)

























 