파이참에서 파란색파일 -> 수정, 빨간색파일 -> untraked, 초록색 파일-> added파일

1,000,000,000 = 10억 을 1e9로 표현 -> 가시성 + 실수줄임

실수는 부동 소수점 -> 완벽하지 못함 -> 셋째자리 반올림 하는 문제에서 round(float, 2) 사용

연산자 / 는 기본적으로 실수값을 반환함 

리스트 [0]*5 ->[0,0,0,0,0]   
 [1,2,3] + [2,3] = [1,2,3,2,3]

인덱싱 마지막값 a[-1]로 표현 <-> 첫번째값 a[-len(a)]

리스트를 초기화하는 고급문법인 리스트 컴프리헨션
array = [i for i in Array if i%2 == 0]
조건문도 추가할수 있다.
L = [i for i in map(int, sys.stdin.readline().rstrip().split()) if i%2 == 0]
삼항연산자도 이용 가능
L = [("odd" if i%2 == 1 else "even") for i in map(int, sys.stdin.readline().rstrip().split())]

2차원 배열 초기화
array = [[0]*n for _ in range(m) ] 
[[0] * n] * m 처럼 사용하면 m개의 같은 레더런스로 같은주소 가져서 절대 쓰면 안됨

튜플은 데이터변경이안된다. -> 변경을 하면안되는 다익스트라 우선순위큐 또는 사전의키값 에 자주사용
리스트보다 상대적으로 공간효율적이고 원소의 성질이 다를경우 자주쓴다.

집합은 중복을 허용하지 않고 순서가 없다. 사전과 같이 특정원소가 존재하는지 검사하는 경우 자주 사용.
| & - 연산자 사용이 가능, add update remove함수가 모두 O(1)의 시간복잡도를 가진다.

입출력 기본 List = list(map(int, input().split()))  // n, m ,k = map(int,input().split())
빠른입력 sys.stdin.readline().rstrip() 함수사용 // 엔터가 줄바꿈기호로 입력되서 제거위한 rstrip()

출력 print(~~~, sep="") 기본적으로 줄바꿈이 들어감 -> ""으로 사용

출력방식 print("%d %f %s"%(Int,Float,Str))
	print(f"정답은 {answer} 입니다") -> 최신버전에서만 제공됨
	또는 format 매서드 사용 -> 사용할때도 있음 
        예시:"int: {0:d}, bin: {0:b}, oct: {0:o}, hex: {0:x}".format(42)
	
	
	
	

리스트를 문자열로
" ".join(L) => 각각 " "으로 구분하여 합친 문자열 반환










